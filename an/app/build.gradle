plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.maza"
    compileSdk 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.maza"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

//dependencies {
//    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.8.21'
//    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.21'
//    // implementation 'com.some.library:version:1.0.0'  // Ensure version is specified correctly
//    // ... other dependencies
//}
//
//configurations.all {
//    resolutionStrategy {
//        force 'org.jetbrains.kotlin:kotlin-stdlib:1.8.21'
//        force 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.21'
//    }
//}
//plugins {
//    id "com.android.application"
//    id "kotlin-android"
//    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
//    id "dev.flutter.flutter-gradle-plugin"
//}
//
//def localProperties = new Properties()
//def localPropertiesFile = rootProject.file("local.properties")
//if (localPropertiesFile.exists()) {
//    localPropertiesFile.withReader("UTF-8") { reader ->
//        localProperties.load(reader)
//    }
//}
//
//def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
//if (flutterVersionCode == null) {
//    flutterVersionCode = "1"
//}
//
//def flutterVersionName = localProperties.getProperty("flutter.versionName")
//if (flutterVersionName == null) {
//    flutterVersionName = "1.0"
//}
//
//android {
//    namespace = "com.example.mazar"
//    compileSdk = 34
//    ndkVersion = flutter.ndkVersion
//
//    compileOptions {
//        sourceCompatibility = JavaVersion.VERSION_1_8
//        targetCompatibility = JavaVersion.VERSION_1_8
//    }
//    kotlinOptions {
//        jvmTarget = '1.8'
//    }
//
//    sourceSets {
//        main.java.srcDirs += 'src/main/kotlin'
//    }
//
//    defaultConfig {
//        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//        applicationId = "com.example.mazar"
//        // You can update the following values to match your application needs.
//        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
//        minSdk = 21
//        targetSdk = 34
//        versionCode = flutterVersionCode.toInteger()
//        versionName = flutterVersionName
//        multiDexEnabled = true
//    }
//
//    buildTypes {
//        release {
////            isMinifyEnabled = true
//            minifyEnabled = true
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig = signingConfigs.debug
//        }
//    }
//}
//
//flutter {
//    source = "../.."
//}
